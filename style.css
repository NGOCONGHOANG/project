document.addEventListener('DOMContentLoaded', function() {
    // Đảm bảo fetch đúng tên file 'content.json' ở cùng cấp với index.html
    fetch('content.json')
        .then(response => {
            if (!response.ok) {
                // Nếu file không tìm thấy (404) hoặc lỗi khác, sẽ nhảy vào đây
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            // Nếu file tìm thấy và ok, parse JSON
            return response.json();
        })
        .then(data => {
            // Nếu parse JSON thành công, điền nội dung
            populateArticle(data.article);
            populateSidebar(data.sidebar);
        })
        .catch(error => {
            // Bất kỳ lỗi nào ở trên (fetch fail, parse fail) sẽ nhảy vào đây
            console.error('Error loading content:', error);
            const articleBody = document.getElementById('article-body');
            if(articleBody) {
                // Đây là nơi hiển thị lỗi bạn thấy trên trang web
                articleBody.innerHTML = `<p style="color: red; font-family: sans-serif;">Sorry, couldn't load the article content. Please try refreshing the page.</p>`;
                 // Thêm chi tiết lỗi vào console để dễ debug hơn
                 console.error("Failed to fetch or parse content.json. Status:", error.message);
            }
        });
});

function populateArticle(articleData) {
    setTextContent('article-headline', articleData.headline);
    setTextContent('article-subheadline', articleData.subheadline);
    setTextContent('article-author', articleData.author);
    setTextContent('article-publish-date', articleData.publishDate);

    const imgElement = document.getElementById('article-image');
    if (imgElement && articleData.mainImageUrl) { // Kiểm tra xem có URL ảnh không
        imgElement.src = articleData.mainImageUrl;
        imgElement.alt = articleData.headline;
    } else if (imgElement) {
         imgElement.alt = "Main image not available"; // Alt text nếu không có ảnh
    }
    setTextContent('article-image-caption', articleData.mainImageCaption);

    const articleBody = document.getElementById('article-body');
    if (!articleBody) return;
    articleBody.innerHTML = ''; // Xóa thông báo lỗi (nếu có) hoặc nội dung cũ

    articleData.sections.forEach(section => {
        let element;
        switch (section.type) {
            case 'heading':
                element = document.createElement(`h${section.level || 2}`);
                element.textContent = section.text;
                break;
            case 'paragraph':
                element = document.createElement('p');
                // Dùng innerHTML thận trọng, nhưng cần cho **bold**
                element.innerHTML = section.text.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>');
                break;
            case 'list':
                element = document.createElement('ul');
                section.items.forEach(itemText => {
                    const listItem = document.createElement('li');
                    listItem.innerHTML = itemText.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>');
                    element.appendChild(listItem);
                });
                break;
             case 'conclusion':
                 element = document.createElement('p');
                 element.innerHTML = `<em>${section.text.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')}</em>`;
                 element.style.borderTop = '1px solid #ccc';
                 element.style.paddingTop = '1em';
                 element.style.marginTop = '2em'; // Thêm khoảng cách trước kết luận
                 break;
            default:
                console.warn('Unknown section type:', section.type);
                element = document.createElement('p');
                element.textContent = section.text || '';
        }
        if (element) {
            articleBody.appendChild(element);
        }
    });
}

function populateSidebar(sidebarData) {
    const relatedContainer = document.getElementById('sidebar-related');
    if (relatedContainer && sidebarData.relatedArticles) {
        relatedContainer.innerHTML = `<h2>${sidebarData.relatedTitle || 'Related'}</h2>`;
        sidebarData.relatedArticles.forEach(article => {
            const div = document.createElement('div');
            div.classList.add('sidebar-article');
            div.innerHTML = `
                <h3><a href="#">${article.title}</a></h3>
                <p class="meta">${article.readTime}</p>
            `;
            relatedContainer.appendChild(div);
        });
    }

     const opinionContainer = document.getElementById('sidebar-opinion');
    if (opinionContainer && sidebarData.opinionArticles) {
        opinionContainer.innerHTML = `<h2>${sidebarData.opinionTitle || 'Opinion'}</h2>`;
         sidebarData.opinionArticles.forEach(article => {
            const div = document.createElement('div');
            div.classList.add('sidebar-article');
            div.innerHTML = `
                <h3><a href="#">${article.title}</a></h3>
                <p class="meta">By ${article.author} • ${article.readTime}</p>
            `;
            opinionContainer.appendChild(div);
        });
    }
}

function setTextContent(id, text) {
    const element = document.getElementById(id);
    if (element) {
        element.textContent = text || ''; // Đặt là chuỗi rỗng nếu text là undefined/null
    } else {
        // Không cần log warning cho author, date... nếu chúng trống trong JSON
        // console.warn(`Element with ID '${id}' not found.`);
    }
}